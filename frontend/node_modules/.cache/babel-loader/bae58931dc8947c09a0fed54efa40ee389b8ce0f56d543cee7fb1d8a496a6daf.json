{"ast":null,"code":"var _jsxFileName = \"/home/mogli/Downloads/Practice-Project/frontend/src/Pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: event.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","json","useLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/home/mogli/Downloads/Practice-Project/frontend/src/Pages/EventDetailPage.js"],"sourcesContent":["import React from \"react\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventItem from '../components/EventItem'\n\n\nconst EventDetailPage = () => {\n  const data = useLoaderData();\n  return (\n    <>\n      <EventItem event={event.data} />\n    </>\n  );\n};\n\nexport default EventDetailPage;\n\nexport async function loader({request, params}) {\n  const id = params.eventId;\n\n  const response = await fetch('http://localhost:8080/events' + id);\n\n  if(!response.ok){\n    throw json({message: 'Could not fetch details for selected event.'}, {status:500})\n  } else{\n    return response;\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG/C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAC5B,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEA,KAAK,CAACF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEP,CAAC;AAACP,EAAA,CAPID,eAAe;EAAA,QACNN,aAAa;AAAA;AAAAe,EAAA,GADtBT,eAAe;AASrB,eAAeA,eAAe;AAE9B,OAAO,eAAeU,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC9C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,GAAGH,EAAE,CAAC;EAEjE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAC;IACd,MAAMxB,IAAI,CAAC;MAACyB,OAAO,EAAE;IAA6C,CAAC,EAAE;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACpF,CAAC,MAAK;IACJ,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}